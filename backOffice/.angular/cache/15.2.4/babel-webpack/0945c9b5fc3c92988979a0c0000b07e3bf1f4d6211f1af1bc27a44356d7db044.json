{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/users.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../shared/progress-bar/progress-bar.component\";\nfunction LoginComponent_app_progress_bar_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-progress-bar\");\n  }\n}\nfunction LoginComponent_div_1_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo nombre es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_1_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo password es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"div\", 4)(3, \"div\", 5);\n    i0.ɵɵtext(4, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 6)(6, \"form\", 7);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_div_1_Template_form_ngSubmit_6_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.login());\n    });\n    i0.ɵɵelement(7, \"input\", 8);\n    i0.ɵɵtemplate(8, LoginComponent_div_1_span_8_Template, 4, 0, \"span\", 0);\n    i0.ɵɵelement(9, \"input\", 9);\n    i0.ɵɵtemplate(10, LoginComponent_div_1_span_10_Template, 4, 0, \"span\", 0);\n    i0.ɵɵelementStart(11, \"div\", 10)(12, \"div\", 11)(13, \"button\", 12);\n    i0.ɵɵtext(14, \"Entrar\");\n    i0.ɵɵelementEnd()()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.formLogin);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r1.formUsers.get(\"name\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx_r1.formUsers.get(\"name\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r1.formUsers.get(\"password\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = ctx_r1.formUsers.get(\"password\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.formLogin.invalid);\n  }\n}\nexport class LoginComponent {\n  constructor(fb, _usersService, router, toastr, aRouter, _location) {\n    this.fb = fb;\n    this._usersService = _usersService;\n    this.router = router;\n    this.toastr = toastr;\n    this.aRouter = aRouter;\n    this._location = _location;\n    this.listUsers = [];\n    this.loading = false;\n    this.formLogin = this.fb.group({\n      //Para poner mas de una validacion hay que ponerlas entre claudators\n      name: ['', Validators.required],\n      password: [null, Validators.required]\n    });\n    this.formUsers = this.fb.group({\n      //Para poner mas de una validacion hay que ponerlas entre claudators\n      name: ['', Validators.required],\n      surname: [null, Validators.required],\n      email: [null, Validators.required],\n      password: [null, Validators.required]\n    });\n  }\n  goBack() {\n    this._location.back();\n  }\n  getListUsers() {\n    this.loading = true;\n    this._usersService.getListUsers().subscribe(data => {\n      this.listUsers = data;\n      this.loading = false;\n    });\n  }\n  login() {\n    const name = this.formLogin.value.name;\n    const password = this.formLogin.value.password;\n    this._usersService.login(name, password).subscribe({\n      next: result => {\n        console.log(result.role);\n        if (result.role === \"Admin\") {\n          this.router.navigate([`/user`]);\n        } else {\n          this.toastr.warning('No tienes permisos para acceder, tu role no es el indicado', 'Credenciales incorrectos');\n        }\n      },\n      error: error => {\n        // throw error;\n        this.toastr.warning('Credenciales de usuario incorrectos', 'Credenciales incorrectos');\n        throw error.message;\n      }\n    });\n    /*this.getListUsers();\n    console.log(this.listUsers.length);\n    var x = 0;\n    while (this.listUsers.length > x){\n        if (name==this.listUsers[x].name && password==this.listUsers[x].password){\n            if (this.listUsers[x].role == \"Admin\"){\n              this.router.navigate([`/user`]);\n            }\n        }\n        x++;\n    }*/\n  }\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UsersService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Location));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [\"class\", \"row mt-1\", 4, \"ngIf\"], [1, \"row\", \"mt-1\"], [1, \"col-lg-4\", \"offset-lg-4\"], [1, \"card\", \"bg-secondary\", \"mb-3\", 2, \"max-width\", \"25rem\"], [1, \"card-header\", \"text-center\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"name\", \"type\", \"text\", \"placeholder\", \"Ingrese nombre\", 1, \"form-control\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Ingrese password\", 1, \"form-control\", \"mt-2\"], [1, \"row\", \"mt-2\", \"text-center\"], [1, \"col-lg-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, LoginComponent_app_progress_bar_0_Template, 1, 0, \"app-progress-bar\", 0);\n      i0.ɵɵtemplate(1, LoginComponent_div_1_Template, 15, 4, \"div\", 1);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.loading);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n    }\n  },\n  dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.ProgressBarComponent],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","i0","LoginComponent","constructor","fb","_usersService","router","toastr","aRouter","_location","formLogin","group","name","required","password","formUsers","surname","email","goBack","back","getListUsers","loading","subscribe","data","listUsers","login","value","next","result","console","log","role","navigate","warning","error","message","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/victoriaromangarrido/Desktop/Uni/3B-Q2/EA/Projecte/BackOfficeEA/backOffice/src/app/components/login/login.component.ts","/Users/victoriaromangarrido/Desktop/Uni/3B-Q2/EA/Projecte/BackOfficeEA/backOffice/src/app/components/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport { ID, User } from 'src/app/interfaces/user';\n//import { ListUsersComponent } from '../list-productos/list-productos.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UsersService } from 'src/app/services/users.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  listUsers: User[] = [];\n  formLogin: FormGroup;\n  formUsers: FormGroup;\n  loading: boolean = false;\n\n  constructor(private fb: FormBuilder,\n    private _usersService: UsersService,\n    private router: Router,\n    private toastr: ToastrService,\n    private aRouter: ActivatedRoute,\n    private _location: Location) {\n    this.formLogin = this.fb.group({\n      //Para poner mas de una validacion hay que ponerlas entre claudators\n      name: ['', Validators.required],\n      password: [null, Validators.required] \n    })\n    this.formUsers = this.fb.group({\n      //Para poner mas de una validacion hay que ponerlas entre claudators\n      name: ['', Validators.required],\n      surname: [null, Validators.required],\n      email: [null, Validators.required],\n      password: [null, Validators.required] \n    })\n\n  }\n\n  goBack(){\n    this._location.back();\n  }\n\n  getListUsers() {\n    this.loading = true;\n    this._usersService.getListUsers().subscribe((data: User[]) => {\n      this.listUsers = data;\n      this.loading = false;\n    })\n  }\n\n\n  login() {\n    const name= this.formLogin.value.name;\n    const password = this.formLogin.value.password;\n    this._usersService.login(name,password).subscribe({\n      next: (result) => {\n        console.log(result.role);\n        if (result.role === \"Admin\"){\n          this.router.navigate([`/user`]); \n        } else {\n          this.toastr.warning('No tienes permisos para acceder, tu role no es el indicado','Credenciales incorrectos');\n        }\n      },\n      error: (error) => {\n          // throw error;\n          this.toastr.warning('Credenciales de usuario incorrectos','Credenciales incorrectos');\n          throw error.message;\n      },\n  }\n    );\n    \n    /*this.getListUsers();\n    console.log(this.listUsers.length);\n    var x = 0;\n    while (this.listUsers.length > x){\n        if (name==this.listUsers[x].name && password==this.listUsers[x].password){\n            if (this.listUsers[x].role == \"Admin\"){\n              this.router.navigate([`/user`]); \n            }\n        }\n        x++;\n    }*/\n  }\n\n}","\n<app-progress-bar *ngIf=\"loading\"></app-progress-bar>\n<div *ngIf=\"!loading\" class=\"row mt-1\">\n    <div class=\"col-lg-4 offset-lg-4\">\n        <div class=\"card bg-secondary mb-3\" style=\"max-width: 25rem;\">\n            <div class=\"card-header text-center\">Login</div>\n            <div class=\"card-body\">\n                <form [formGroup] = \"formLogin\" (ngSubmit)=\"login()\">\n                    <input formControlName=\"name\" type=\"text\" class=\"form-control\" placeholder=\"Ingrese nombre\">\n                    <span *ngIf=\"formUsers.get('name')?.hasError('required') && formUsers.get('name')?.touched\">\n                        El campo nombre es <strong>requerido</strong>\n                    </span>\n                    <input formControlName=\"password\" type=\"password\" class=\"form-control mt-2\" placeholder=\"Ingrese password\">\n                    <span *ngIf=\"formUsers.get('password')?.hasError('required') && formUsers.get('password')?.touched\">\n                        El campo password es <strong>requerido</strong>\n                    </span>\n                    <div class=\"row mt-2 text-center\">\n                        \n                        <div class=\"col-lg-6\">\n                            <button [disabled]=\"formLogin.invalid\" type=\"submit\" class=\"btn btn-primary\">Entrar</button>\n                        </div>\n                    </div>\n                </form>\n            </div>\n\n        </div>\n    </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}