{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UsersService = /*#__PURE__*/(() => {\n  class UsersService {\n    constructor(http) {\n      this.http = http;\n      this.myAppUrl = environment.endpoint;\n    }\n    getListUsers() {\n      const myApiUrl = 'user/all';\n      return this.http.get(`${this.myAppUrl}${myApiUrl}`);\n    }\n    deleteUser(id) {\n      const myApiUrl = 'user/';\n      return this.http.delete(`${this.myAppUrl}${myApiUrl}${id}`);\n    }\n    /*crateUser(user: User): Observable<User> {\n      const myApiUrl: string = 'user/'\n      return this.http.post<User>(`${this.myAppUrl}${myApiUrl}`, user);\n    }*/\n    crateUser(user) {\n      const myApiUrl = 'auth/register';\n      return this.http.post(`${this.myAppUrl}${myApiUrl}`, user);\n    }\n    getUser(id) {\n      const myApiUrl = 'user/';\n      return this.http.get(`${this.myAppUrl}${myApiUrl}${id}`);\n    }\n    updateUser(id, user) {\n      const myApiUrl = 'user/';\n      return this.http.put(`${this.myAppUrl}${myApiUrl}${id}`, user);\n    }\n    login(name, password) {\n      const myApiUrl = 'auth/login';\n      return this.http.post(`${this.myAppUrl}${myApiUrl}`, {\n        \"name\": `${name}`,\n        \"password\": `${password}`\n      });\n    }\n  }\n  UsersService.ɵfac = function UsersService_Factory(t) {\n    return new (t || UsersService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  UsersService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UsersService,\n    factory: UsersService.ɵfac,\n    providedIn: 'root'\n  });\n  return UsersService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}