{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductosService = /*#__PURE__*/(() => {\n  class ProductosService {\n    constructor(http) {\n      this.http = http;\n      this.myAppUrl = environment.endpoint;\n    }\n    getProductosTicket(id) {\n      const myApiUrl = `ticket/${id}/productos`;\n      return this.http.get(`${this.myAppUrl}${myApiUrl}`);\n    }\n    getListProductos() {\n      const myApiUrl = 'producto/all';\n      return this.http.get(`${this.myAppUrl}${myApiUrl}`);\n    }\n    deleteProducto(id) {\n      const myApiUrl = 'producto/';\n      return this.http.delete(`${this.myAppUrl}${myApiUrl}${id}`);\n    }\n    crateProducto(producto) {\n      const myApiUrl = 'producto/';\n      return this.http.post(`${this.myAppUrl}${myApiUrl}`, producto);\n    }\n    getProducto(id) {\n      const myApiUrl = 'producto/';\n      return this.http.get(`${this.myAppUrl}${myApiUrl}${id}`);\n    }\n    updateProducto(id, product) {\n      const myApiUrl = 'producto/';\n      return this.http.put(`${this.myAppUrl}${myApiUrl}${id}`, product);\n    }\n    insertProductoToTicket(idTicket, idProducto) {\n      const myApiUrl = 'ticket/insert';\n      return this.http.post(`${this.myAppUrl}${myApiUrl}`, {\n        \"idTicket\": `${idTicket}`,\n        \"idProducto\": `${idProducto}`\n      });\n    }\n  }\n  ProductosService.ɵfac = function ProductosService_Factory(t) {\n    return new (t || ProductosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ProductosService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductosService,\n    factory: ProductosService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductosService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}