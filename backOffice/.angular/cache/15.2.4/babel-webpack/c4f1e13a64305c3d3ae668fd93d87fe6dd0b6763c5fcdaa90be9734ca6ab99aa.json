{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/users.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../shared/progress-bar/progress-bar.component\";\nfunction LoginComponent_app_progress_bar_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-progress-bar\");\n  }\n}\nfunction LoginComponent_div_1_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo nombre es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_1_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El campo password es \");\n    i0.ɵɵelementStart(2, \"strong\");\n    i0.ɵɵtext(3, \"requerido\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"div\", 3)(2, \"div\", 4)(3, \"div\", 5);\n    i0.ɵɵtext(4, \"Login\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 6)(6, \"form\", 7);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_div_1_Template_form_ngSubmit_6_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.login());\n    });\n    i0.ɵɵelement(7, \"input\", 8);\n    i0.ɵɵtemplate(8, LoginComponent_div_1_span_8_Template, 4, 0, \"span\", 0);\n    i0.ɵɵelement(9, \"input\", 9);\n    i0.ɵɵtemplate(10, LoginComponent_div_1_span_10_Template, 4, 0, \"span\", 0);\n    i0.ɵɵelementStart(11, \"div\", 10)(12, \"div\", 11)(13, \"button\", 12);\n    i0.ɵɵtext(14, \"Entrar\");\n    i0.ɵɵelementEnd()()()()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.formLogin);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx_r1.formUsers.get(\"name\")) == null ? null : tmp_1_0.hasError(\"required\")) && ((tmp_1_0 = ctx_r1.formUsers.get(\"name\")) == null ? null : tmp_1_0.touched));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r1.formUsers.get(\"password\")) == null ? null : tmp_2_0.hasError(\"required\")) && ((tmp_2_0 = ctx_r1.formUsers.get(\"password\")) == null ? null : tmp_2_0.touched));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.formLogin.invalid);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(fb, _usersService, router, toastr, aRouter, _location) {\n      this.fb = fb;\n      this._usersService = _usersService;\n      this.router = router;\n      this.toastr = toastr;\n      this.aRouter = aRouter;\n      this._location = _location;\n      this.listUsers = [];\n      this.loading = false;\n      this.formLogin = this.fb.group({\n        //Para poner mas de una validacion hay que ponerlas entre claudators\n        name: ['', Validators.required],\n        password: [null, Validators.required]\n      });\n      this.formUsers = this.fb.group({\n        //Para poner mas de una validacion hay que ponerlas entre claudators\n        name: ['', Validators.required],\n        surname: [null, Validators.required],\n        email: [null, Validators.required],\n        password: [null, Validators.required]\n      });\n    }\n    goBack() {\n      this._location.back();\n    }\n    getListUsers() {\n      this.loading = true;\n      this._usersService.getListUsers().subscribe(data => {\n        this.listUsers = data;\n        this.loading = false;\n      });\n    }\n    login() {\n      const name = this.formLogin.value.name;\n      const password = this.formLogin.value.password;\n      this._usersService.login(name, password).subscribe({\n        next: result => {\n          console.log(result.user.role);\n          if (result.user.role === \"Admin\") {\n            this.router.navigate([`/user`]);\n          } else {\n            this.toastr.warning('No tienes permisos para acceder, tu role no es el indicado', 'Credenciales incorrectos');\n          }\n        },\n        error: error => {\n          // throw error;\n          this.toastr.warning('Credenciales de usuario incorrectos', 'Credenciales incorrectos');\n          throw error.message;\n        }\n      });\n      /*this.getListUsers();\n      console.log(this.listUsers.length);\n      var x = 0;\n      while (this.listUsers.length > x){\n          if (name==this.listUsers[x].name && password==this.listUsers[x].password){\n              if (this.listUsers[x].role == \"Admin\"){\n                this.router.navigate([`/user`]);\n              }\n          }\n          x++;\n      }*/\n    }\n  }\n\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UsersService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Location));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngIf\"], [\"class\", \"row mt-1\", 4, \"ngIf\"], [1, \"row\", \"mt-1\"], [1, \"col-lg-4\", \"offset-lg-4\"], [1, \"card\", \"bg-secondary\", \"mb-3\", 2, \"max-width\", \"25rem\"], [1, \"card-header\", \"text-center\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"formControlName\", \"name\", \"type\", \"text\", \"placeholder\", \"Ingrese nombre\", 1, \"form-control\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Ingrese password\", 1, \"form-control\", \"mt-2\"], [1, \"row\", \"mt-2\", \"text-center\"], [1, \"col-lg-6\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, LoginComponent_app_progress_bar_0_Template, 1, 0, \"app-progress-bar\", 0);\n        i0.ɵɵtemplate(1, LoginComponent_div_1_Template, 15, 4, \"div\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n      }\n    },\n    dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i6.ProgressBarComponent]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}