{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GrupoService {\n  constructor(http) {\n    this.http = http;\n    this.myAppUrl = environment.endpoint;\n  }\n  getListGrupos() {\n    const myApiUrl = 'grupo/all';\n    return this.http.get(`${this.myAppUrl}${myApiUrl}`);\n  }\n  deleteGrupo(id) {\n    const myApiUrl = 'grupo/';\n    return this.http.delete(`${this.myAppUrl}${myApiUrl}${id}`);\n  }\n  crateGrupo(grupo) {\n    const myApiUrl = 'grupo/';\n    return this.http.post(`${this.myAppUrl}${myApiUrl}`, grupo);\n  }\n  getGrupo(id) {\n    const myApiUrl = 'grupo/';\n    return this.http.get(`${this.myAppUrl}${myApiUrl}${id}`);\n  }\n  updateGrupo(id, user) {\n    const myApiUrl = 'grupo/';\n    return this.http.put(`${this.myAppUrl}${myApiUrl}${id}`, user);\n  }\n}\nGrupoService.ɵfac = function GrupoService_Factory(t) {\n  return new (t || GrupoService)(i0.ɵɵinject(i1.HttpClient));\n};\nGrupoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GrupoService,\n  factory: GrupoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAQ1D,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IACtB,IAAI,CAACC,QAAQ,GAAGJ,WAAW,CAACK,QAAQ;EAGtC;EAEAC,aAAa;IACX,MAAMC,QAAQ,GAAW,WAAW;IACpC,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAU,GAAG,IAAI,CAACJ,QAAQ,GAAGG,QAAQ,EAAE,CAAC;EAC9D;EAEAE,WAAW,CAACC,EAAM;IAChB,MAAMH,QAAQ,GAAW,QAAQ;IACjC,OAAO,IAAI,CAACJ,IAAI,CAACQ,MAAM,CAAO,GAAG,IAAI,CAACP,QAAQ,GAAGG,QAAQ,GAAGG,EAAE,EAAE,CAAC;EAEnE;EAEAE,UAAU,CAACC,KAAY;IACrB,MAAMN,QAAQ,GAAW,QAAQ;IACjC,OAAO,IAAI,CAACJ,IAAI,CAACW,IAAI,CAAQ,GAAG,IAAI,CAACV,QAAQ,GAAGG,QAAQ,EAAE,EAAEM,KAAK,CAAC;EACpE;EAEAE,QAAQ,CAACL,EAAU;IACjB,MAAMH,QAAQ,GAAW,QAAQ;IACjC,OAAO,IAAI,CAACJ,IAAI,CAACK,GAAG,CAAQ,GAAG,IAAI,CAACJ,QAAQ,GAAGG,QAAQ,GAAGG,EAAE,EAAE,CAAC;EACjE;EAEAM,WAAW,CAACN,EAAU,EAAEO,IAAW;IACjC,MAAMV,QAAQ,GAAW,QAAQ;IACjC,OAAO,IAAI,CAACJ,IAAI,CAACe,GAAG,CAAQ,GAAG,IAAI,CAACd,QAAQ,GAAGG,QAAQ,GAAGG,EAAE,EAAE,EAAEO,IAAI,CAAC;EACvE;;AAlCWhB,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAkB,SAAZlB,YAAY;EAAAmB,YAFX;AAAM","names":["environment","GrupoService","constructor","http","myAppUrl","endpoint","getListGrupos","myApiUrl","get","deleteGrupo","id","delete","crateGrupo","grupo","post","getGrupo","updateGrupo","user","put","factory","providedIn"],"sourceRoot":"","sources":["/Users/victoriaromangarrido/Desktop/Uni/3B-Q2/EA/Projecte/BackOfficeEA/backOffice/src/app/services/grupo.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { ID, Grupo } from '../interfaces/grupo';\nimport { Observable } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GrupoService {\n  \n  private myAppUrl: string;\n\n  constructor(private http: HttpClient) {\n    this.myAppUrl = environment.endpoint;\n\n    \n  }\n\n  getListGrupos(): Observable<Grupo[]> {\n    const myApiUrl: string = 'grupo/all'\n    return this.http.get<Grupo[]>(`${this.myAppUrl}${myApiUrl}`)\n  }\n\n  deleteGrupo(id: ID): Observable<void> {\n    const myApiUrl: string = 'grupo/'\n    return this.http.delete<void>(`${this.myAppUrl}${myApiUrl}${id}`)\n\n  }\n\n  crateGrupo(grupo: Grupo): Observable<Grupo> {\n    const myApiUrl: string = 'grupo/'\n    return this.http.post<Grupo>(`${this.myAppUrl}${myApiUrl}`, grupo);\n  }\n\n  getGrupo(id: string): Observable<Grupo> {\n    const myApiUrl: string = 'grupo/';\n    return this.http.get<Grupo>(`${this.myAppUrl}${myApiUrl}${id}`);\n  }\n\n  updateGrupo(id: string, user: Grupo): Observable<Grupo> {\n    const myApiUrl: string = 'grupo/';\n    return this.http.put<Grupo>(`${this.myAppUrl}${myApiUrl}${id}`, user);\n  }\n\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}